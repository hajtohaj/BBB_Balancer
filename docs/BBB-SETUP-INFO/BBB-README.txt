http://elinux.org/BeagleBoardUbuntu
make menuconfig ARCH=arm
raw microSD img (BeagleBone White/Black/Green)
wget https://rcn-ee.com/rootfs/2015-11-13/microsd/bone-ubuntu-14.04.3-console-armhf-2015-11-13-2gb.img.xz

unxz bone-ubuntu-14.04.3-console-armhf-2015-11-13-2gb.img.xz
dd if=./bone-ubuntu-14.04.3-console-armhf-2015-11-13-2gb.img of=/dev/mmcblk1

------------
https://eewiki.net/display/linuxonarm/BeagleBone+Black#BeagleBoneBlack-capemgr:v4.1.x+
capemgr: v4.1.x+
                https://github.com/beagleboard/bb.org-overlays/blob/master/readme.md

                cd /opt/scripts/tools
                git pull
                ./update_kernel.sh --lts --bone-channel
                zcat /proc/config.gz | grep CONFIG_BONE_CAPEMGR
                CONFIG_BONE_CAPEMGR=y
                reboot
		
                cd ~/
                git clone https://github.com/beagleboard/bb.org-overlays
                cd ./bb.org-overlays
                ./dtc-overlay.sh
                ./install.sh

                in /boot/uEnv.txt...
                BeagleBone Black: HDMI Audio/eMMC disabled:
                dtb=am335x-boneblack-nhdmi-overlay.dtb

---------------------------
http://brilliantlyeasy.com/ubuntu-linux-tl-wn725n-tp-link-version-2-wifi-driver-install/
apt-get update
apt-get install --reinstall  linux-image-$(uname -r)
apt-get install linux-headers-$(uname -r)
apt-get update
apt-get install build-essential
apt-get install git
git clone https://github.com/lwfinger/rtl8188eu
cd rtl8188eu
make all
make install
insmod 8188eu.ko
reboot
apt-get install crda
iwconfig wlan 0
wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test100.zip
wget -O /dev/null http://95.160.171.74/test/file/100mb.vec
------------------------------
mkdir -p /var/cache/swap/
dd if=/dev/zero of=/var/cache/swap/swapfile bs=1M count=1024
chmod 0600 /var/cache/swap/swapfile
mkswap /var/cache/swap/swapfile
swapon /var/cache/swap/swapfile
vi /etc/fstab
/var/cache/swap/swapfile    none    swap    sw    0   0
-------------------------------
/etc/network/interfaces
# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet static
  address 192.168.137.14
  netmask 255.255.255.0
  network 192.168.137.0
#  gateway 192.168.137.1

# Example to keep MAC address between reboots
#hwaddress ether DE:AD:BE:EF:CA:FE

# The secondary network interface
#auto eth1
#iface eth1 inet dhcp

# WiFi Example
#auto wlan0
#iface wlan0 inet dhcp
#    wpa-ssid "essid"
#    wpa-psk  "password"
auto wlan0
iface wlan0 inet dhcp
   wpa-ssid "vnet-8B4052"
   wpa-psk "vnetEAHBU7K96104467"
   gateway 192.168.0.1


# Ethernet/RNDIS gadget (g_ether)
# Used by: /opt/scripts/boot/autoconfigure_usb0.sh
iface usb0 inet static
    address 192.168.7.2
    netmask 255.255.255.252
    network 192.168.7.0
#    gateway 192.168.7.1
------------------------------
/etc/hostname
ubu-sd
---------------------------
cat /etc/hosts
127.0.0.1       localhost
127.0.1.1       ubu-sd.localdomain      ubu-sd

# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
--------------------------------
dpkg-reconfigure tzdata
apt-get install ntpd
/etc/ntpd.conf
# Use servers from the NTP Pool Project. Approved by Ubuntu Technical Board
# on 2011-02-08 (LP: #104525). See http://www.pool.ntp.org/join.html for
# more information.
server tempus1.gum.gov.pl
server tempus2.gum.gov.pl

# Use Ubuntu's ntp server as a fallback.
server ntp.ubuntu.com

service ntp stop
ntpdate tempus1.gum.gov.pl
service ntp start
ntpq -p
-------------------------------
/etc/ssh/sshd_config
PermitRootLogin yes
UseDns no
-----------------------------------
/etc/resolvconf/resolv.conf.d/head
# Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 37.8.214.2

-EQEP--------------------
#Zawsze najpierw podłączamy zasilanie BBB. Pozostałe układy w drugiej kolejności.
#	file://EQEP2/schemat.png
#	file://EQEP2/plytka_prototypowa_zdjecie1.png
#	file://EQEP2/plytka_prototypowa_zdjecie2.png
 BBB
	EQEP2A  P8_12 filoetowy
	EQEP2B  P8_11 pomaranczowy
	GND     P9_1 szary
	DC_3.3V P9_3 czerwony
 MOK30
	VCC +5V 1 brazowy
	GND     2 niebieski
	A 		3 czrny
	B		4 bialy
 ZASILACZ
	VCC +5V 1 zolty
	GND     2 zielony
	
	2x pc817 sharp
	2x 360  ohm
	2x 1.6k ohm
	
	
# Based on https://github.com/Teknoman117/beaglebot.git
# git clone https://github.com/Teknoman117/beaglebot.git
# cd beaglebot/encoders/dts/
# dtc -O dtb -o bone_eqep2b-00A0.dtbo -b 0 -@ bone_eqep2b.dts
# cp bone_eqep2b-00A0.dtbo /lib/firmware/
# dmesg
# echo bone_eqep2b > /sys/devices/platform/bone_capemgr/slots
# cat /sys/devices/platform/bone_capemgr/slots
# cd /sys/devices/platform/ocp/48304000.epwmss/48304180.eqep
# cat enabled
# cat position
# echo -4 > /sys/devices/platform/bone_capemgr/slots

----------------------------------------------------------------------------
git clone https://github.com/linux-can/can-utils.git
cd can-utils/
apt-get install dh-autoreconf
./autogen.sh
./configure
make
make install


  echo BBB-DCAN1 > /sys/devices/platform/bone_capemgr/slots
  dmesg
  lsmod
  modprobe can
  modprobe can-dev
  modprobe can-raw

  ifconfig can0 down
  ip link set can0 type can bitrate 1000000 loopback off triple-sampling on
  ifconfig can0 up
  ip -details -statistics link show can0
  ip -details link show can0
  cansend vcan0 442#DEADBABE
  candump vcan0
     vcan0  442   [4]  DE AD BA BE
  candump -cae can0,0:0,#FFFFFFFF
  ip link | grep can[0-9]

#--------change i2c 2 frequency
https://groups.google.com/forum/#!category-topic/beagleboard/vbuM-4oShS8
Check active overlay dtbo file name in /boot/uEnv.txt
##BeagleBone Black: HDMI (Audio/Video) disabled:
dtb=am335x-boneblack-emmc-overlay.dtb

cd /boot/dtbs/`uname -r`

cp am335x-boneblack-emmc-overlay.dtb am335x-boneblack-emmc-overlay.dtb.bkp
dtc -I dtb -O dts -o am335x-boneblack-emmc-overlay.dts am335x-boneblack-emmc-overlay.dtb
vi am335x-boneblack-emmc-overlay.dts
                i2c@4819c000 {
                        compatible = "ti,omap4-i2c";
                        #address-cells = <0x1>;
                        #size-cells = <0x0>;
                        ti,hwmods = "i2c3";
                        reg = <0x4819c000 0x1000>;
                        interrupts = <0x1e>;
                        status = "okay";
                        pinctrl-names = "default";
                        pinctrl-0 = <0x28>;
                        #clock-frequency = <0x186a0>;
                        clock-frequency = <0x61a80>;
                        linux,phandle = <0x89>;
                        phandle = <0x89>;
dtc -I dts -O dtb -o am335x-boneblack-emmc-overlay.dtb am335x-boneblack-emmc-overlay.dts
reboot
dmesg |grep i2c
